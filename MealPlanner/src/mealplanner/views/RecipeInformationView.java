// This project has no license.
package mealplanner.views;

/**
 *
 * @author Matthew
 */
public class RecipeInformationView extends javax.swing.JPanel {
    
    static String recipeName = "";
    static String recipeCategory = "";
    static String recipeInstructions = "";
    
    /**
     * Creates new form RecipeInformationView
     */
    public RecipeInformationView() {
        initComponents();
        recipeCategoryDropdown.add("Dessert");
        recipeCategoryDropdown.add("Snack");
        recipeCategoryDropdown.add("Appetizer");
        recipeCategoryDropdown.add("Entree");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        recipeNameLabel = new javax.swing.JLabel();
        recipeCategoryLabel = new javax.swing.JLabel();
        recipeInstructionLabel = new javax.swing.JLabel();
        recipeInstructionScroll = new javax.swing.JScrollPane();
        recipeInstructionText = new javax.swing.JTextArea();
        recipeNameScroll = new javax.swing.JScrollPane();
        recipeNameText = new javax.swing.JTextArea();
        recipeCategoryDropdown = new java.awt.Choice();

        setMaximumSize(new java.awt.Dimension(460, 680));
        setMinimumSize(new java.awt.Dimension(460, 680));

        recipeNameLabel.setText("Recipe Name");

        recipeCategoryLabel.setText("Recipe Category");

        recipeInstructionLabel.setText("Recipe Instructions");

        recipeInstructionText.setColumns(20);
        recipeInstructionText.setLineWrap(true);
        recipeInstructionText.setRows(5);
        recipeInstructionText.setText("Instructions");
        recipeInstructionScroll.setViewportView(recipeInstructionText);

        recipeNameText.setColumns(20);
        recipeNameText.setRows(5);
        recipeNameText.setText("Name");
        recipeNameScroll.setViewportView(recipeNameText);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(recipeInstructionScroll, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
                            .addComponent(recipeCategoryDropdown, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(recipeNameScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(170, 170, 170)
                                .addComponent(recipeCategoryLabel)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(189, 189, 189)
                        .addComponent(recipeNameLabel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(174, 174, 174)
                .addComponent(recipeInstructionLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(recipeNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(recipeNameScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(recipeCategoryLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(recipeCategoryDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(recipeInstructionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(recipeInstructionScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(383, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Choice recipeCategoryDropdown;
    private javax.swing.JLabel recipeCategoryLabel;
    private javax.swing.JLabel recipeInstructionLabel;
    private javax.swing.JScrollPane recipeInstructionScroll;
    private javax.swing.JTextArea recipeInstructionText;
    private javax.swing.JLabel recipeNameLabel;
    private javax.swing.JScrollPane recipeNameScroll;
    private javax.swing.JTextArea recipeNameText;
    // End of variables declaration//GEN-END:variables

   public void setRecipeData(String name, String category, String instructions){
       recipeName = name;
       recipeCategory = category;
       recipeInstructions = instructions;
       displayRecipeData();
   }
   
   public void displayRecipeData(){
       recipeNameText.setText(recipeName);
       recipeCategoryDropdown.select(recipeCategory);
       recipeInstructionText.setText(recipeInstructions);
   }
}